# Generated by Django 5.2.6 on 2025-09-15 19:47

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api_auth', '0004_usermodel_coins_usermodel_date_of_birth_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(max_length=4000, verbose_name='Содержание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images/', verbose_name='Изображение')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Теги')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликован')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='api_auth.usermodel', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='api_auth.usermodel', verbose_name='Пользователь')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='feed.post', verbose_name='Пост')),
            ],
            options={
                'verbose_name': 'Лайк',
                'verbose_name_plural': 'Лайки',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(max_length=1000, verbose_name='Содержание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api_auth.usermodel', verbose_name='Автор')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='feed.comment', verbose_name='Родительский комментарий')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feed.post', verbose_name='Пост')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.FloatField(default=0.0, verbose_name='Оценка релевантности')),
                ('reason', models.CharField(blank=True, max_length=255, verbose_name='Причина рекомендации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='feed.post', verbose_name='Пост')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='api_auth.usermodel', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рекомендация поста',
                'verbose_name_plural': 'Рекомендации постов',
                'ordering': ['-score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата просмотра')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='feed.post', verbose_name='Пост')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_views', to='api_auth.usermodel', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Просмотр поста',
                'verbose_name_plural': 'Просмотры постов',
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-created_at'], name='feed_post_created_e5d35a_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author'], name='feed_post_author__48a596_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_published'], name='feed_post_is_publ_bd8871_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['post'], name='feed_like_post_id_c0a13f_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user'], name='feed_like_user_id_aeec06_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('post', 'user')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'created_at'], name='feed_commen_post_id_3fe3f3_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author'], name='feed_commen_author__dc3349_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='feed_commen_parent__bf3cb4_idx'),
        ),
        migrations.AddIndex(
            model_name='postrecommendation',
            index=models.Index(fields=['user', '-score'], name='feed_postre_user_id_2824d6_idx'),
        ),
        migrations.AddIndex(
            model_name='postrecommendation',
            index=models.Index(fields=['post'], name='feed_postre_post_id_00dd69_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postrecommendation',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='postview',
            index=models.Index(fields=['post', 'viewed_at'], name='feed_postvi_post_id_3e9f92_idx'),
        ),
        migrations.AddIndex(
            model_name='postview',
            index=models.Index(fields=['user'], name='feed_postvi_user_id_48e912_idx'),
        ),
        migrations.AddIndex(
            model_name='postview',
            index=models.Index(fields=['ip_address'], name='feed_postvi_ip_addr_b35506_idx'),
        ),
    ]
